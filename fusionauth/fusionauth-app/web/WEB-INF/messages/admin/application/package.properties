#
# Copyright (c) 2018-2020, FusionAuth, All Rights Reserved
#

# Messages
add-role=Add Role
applicationId=Id
application.name=Name
application.cleanSpeakConfiguration.applicationIds=CleanSpeak Applications
application.cleanSpeakConfiguration.usernameModeration.enabled=Enable Username Moderation
application.cleanSpeakConfiguration.usernameModeration.applicationId=CleanSpeak Application

clean-speak-settings.description=Selecting CleanSpeak applications from the provided list allows you to associate this FusionAuth application to multiple applications in CleanSpeak. If this FusionAuth application maps to a single application in CleanSpeak, do not select any applications here. The application Id in FusionAuth will be expected to be the same as the application Id in CleanSpeak. Contact Support if you need assistance.

clean-speak-down-or-has-no-applications=Either your CleanSpeak server is not reachable or it doesn't have any Applications configured. If your CleanSpeak applications have been configured verify your CleanSpeak settings in the System Settings.
clean-speak-mapping-info=This configuration is used to properly handle notifications originating from one of the selected CleanSpeak applications.
clean-speak-not-enabled=The CleanSpeak integration is not enabled. To enable username moderation for this application, enable and configure the <a href="/admin/integration/cleanspeak">CleanSpeak Integration</a>.
clean-speak-settings=CleanSpeak Settings
delete-role=Delete Role
edit-role=Edit Role
manage-roles=Manage Roles
manage-oauth=Manage Oauth
no-clean-speak-application-ids=No CleanSpeak Application Ids configured. Click "Add Row" to add one.
no-webhooks=No application specific Webhooks have been configured. You can add a new Webhook configuration here <a href="/admin/webhook/">Webhooks Settings</a>.
registration-fields=Registration fields
webhooks=Webhooks
webhookIds=Webhooks

# OAuth
oauth-settings=OAuth 2.0 Settings
oauth-settings-description=Once you have saved your Application, you can click the view icon <a style="pointer-events: none;" class="small-square green button"><i class="fa fa-search"></i></a> to see the \
  IdP URLs that most service providers will need configured to login with FusionAuth.
oauth.redirectURLs=Authorized redirect URLs
oauth.origin=Authorized request origin URLs
oauth.clientId=Client Id
oauth.clientSecret=Client secret
oauth.logoutBehavior=Logout behavior
oauth.logoutURL=Logout URL
oauth.deviceVerificationURL=Device verification URL

application.oauthConfiguration.clientId=Client Id
application.oauthConfiguration.clientSecret=Client secret
application.oauthConfiguration.enabledGrants=Enabled grants
application.oauthConfiguration.generateRefreshTokens=Generate refresh tokens
application.oauthConfiguration.requireClientAuthentication=Require authentication

# Lambda Configuration
application.lambdaConfiguration.accessTokenPopulateId=Access token populate lambda
application.lambdaConfiguration.idTokenPopulateId=Id token populate lambda
application.lambdaConfiguration.samlv2PopulateId=Response populate lambda

# OAuth2 Grants
authorization_code=Authorization Code
client_credentials=Client Credentials
device_code=Device
implicit=Implicit
refresh_token=Refresh Token
password=Password

# Registration & Email Configuration
application.verificationEmailTemplateId=Verification template
application.verifyRegistration=Verify registrations

none-selected-email-template-default=No template selected. System configured template will be used.
no-email-templates=No email templates defined. You must create email templates to enable email verification and forgot password handling.
no-email-templates-available-registration-validation=No email template defined. You must create an email template to enable Registration verification.

# JWT Configuration
jwt=JWT
jwt-settings=JSON web token settings
jwt-settings-description=This is the application specific configuration for the JSON Web Token signing algorithm. This configuration is optional and may be left un-configured. If no JWT configuration is provided for this application the JWT signing algorithm specified in the Tenant configuration will be used to sign and verify tokens for this application.

application.jwtConfiguration.enabled=Enabled
application.jwtConfiguration.accessTokenKeyId=Access token signing key
application.jwtConfiguration.idTokenKeyId=Id token signing key
application.jwtConfiguration.issuer=Issuer
application.jwtConfiguration.refreshTokenTimeToLiveInMinutes=Refresh token duration
application.jwtConfiguration.timeToLiveInSeconds=JWT duration

# Registration configuration
registration-settings=Self service registration
application.registrationConfiguration.enabled=Enabled
application.registrationConfiguration.confirmPassword=Confirm password
application.registrationConfiguration.loginIdType=Login type
application.registrationConfiguration.birthDate=Birthdate
application.registrationConfiguration.firstName=First name
application.registrationConfiguration.fullName=Full name
application.registrationConfiguration.lastName=Last name
application.registrationConfiguration.middleName=Middle name
application.registrationConfiguration.mobilePhone=Mobile phone

# Security Configuration
application.authenticationTokenConfiguration.enabled=Enabled

# Login Settings
login-settings=Login API Settings
application.loginConfiguration.allowTokenRefresh=Allow token refresh
application.loginConfiguration.generateRefreshTokens=Generate refresh tokens
application.loginConfiguration.requireAuthentication=Require an API key

authentication-token-settings=Authentication Tokens

# Passwordless Settings
passwordless-settings=Passwordless Login
application.passwordlessConfiguration.enabled=Enabled

# SAML v2
samlv2-settings-description=This enables FusionAuth's SAML v2 identity provider. You must specify the Assertion Consumer Service (ACS) callback \
  URL that FusionAuth will return the user to after they have logged in along with the SAML response XML. Additionally, you must specify a key \
  pair to use for signing the SAML response and should share the public key portion of the key pair with the service provider (or your application).\
  <br><br> \
  Once you have saved your Application, you can click the view icon <a style="pointer-events: none;" class="small-square green button"><i class="fa fa-search"></i></a> to see the \
  IdP URLs that most service providers will need configured to login with FusionAuth.
generate-signing-key=Auto generate a new key on save\u2026
select-signing-key=Select a signing key\u2026

application.samlv2Configuration.debug=Debug enabled
application.samlv2Configuration.audience=Audience
application.samlv2Configuration.callbackURL=Callback URL (ACS)
application.samlv2Configuration.enabled=Enabled
application.samlv2Configuration.issuer=Issuer
application.samlv2Configuration.keyId=Signing key
application.samlv2Configuration.logoutURL=Logout URL
application.samlv2Configuration.xmlSignatureC14nMethod=XML signature canonicalization method

# Registration delete policy
application.registrationDeletePolicy.unverified.enabled=Delete unverified registrations
application.registrationDeletePolicy.unverified.numberOfDaysToRetain=Delete after

# Placeholders
{placeholder}application.oauth.clientId=Value will be initialized during creation. This value is not user modifiable
{placeholder}application.samlv2Configuration.audience=Defaults to the same value as issuer

# Descriptions
{description}authentication-token-settings=Allow users to optionally authenticate using an Application \
  specific token in place of their password. This should only be used when the security requirements are low and the user's normal password \
  is not a good option for authentication. For example, if a password needs to be stored in an external configuration and the exposure risk \
  is low, a token can be used in place of the user's password. This token may only be used for authorization for this application.

{description}passwordless-settings=Allow users to request login using a link sent via email. Enabling this feature will cause a button to be \
  displayed on the FusionAuth login form and allow you to utilize the Passwordless Login API.

{description}login-settings=The Login API settings allow you to control access to the Login API and limit the capability for users in this Application. This configuration will not affect authentication via OAuth grants.
{description}registration-settings=Self service registration will allow users to self register using the FusionAuth login page. \
 If the user does not yet exist, the user will be created and registered in one step, if a user already exists but has not yet registered, \
 the user will be automatically prompted to register after a successful authentication.

# Tooltips
{tooltip}applicationId=Leaving this blank will auto-generate an UUID for you
{tooltip}application.name=For display purposes only

{tooltip}oauth.logoutURL=The Application specific logout URL, if not defined the global value will be used
{tooltip}oauth.logoutBehavior=When set to Redirect only, the logout request will only end your SSO session and redirect. When set to All applications, the logout request will end your SSO session, make a GET request to each Application and Tenant Logout URL if defined and then redirect
{tooltip}oauth.origin=All origins are allowed unless specific origins are defined
{tooltip}oauth.redirectURLs=One or more allowed URLs that the OAuth grant workflow may redirect to upon completion
{tooltip}oauth.deviceVerificationURL=The Application specific device verification URL for the user-interaction of the Device Authorization Grant.  This field is required when the Device grant has been enabled

# JWT Configuration
{tooltip}application.verificationEmailTemplateId=This email template will be sent to the User to verify registration
{tooltip}application.verifyRegistration=Enable to request FusionAuth verify User registrations. This allows the User to confirm they intended to register for the Application

{tooltip}application.oauthConfiguration.generateRefreshTokens=Controls if refresh tokens are returned from the Token endpoint if the OAuth offline_access scope is requested
{tooltip}application.oauthConfiguration.requireClientAuthentication=Controls if the Token endpoint requires Basic Authentication using the Client Id and Client secret

{tooltip}application.registrationConfiguration.confirmPassword=Require the user to confirm their password by typing it twice during registration
{tooltip}application.registrationConfiguration.enabled=Enabling self service registration will provide a button on the login page to allow users to create a new account
{tooltip}application.registrationConfiguration.loginIdType=Choose whether users will log in with their email address or a username, this value will then be collected during registration

{tooltip}application.loginConfiguration.allowTokenRefresh=When enabled a JWT may be refreshed using the JWT Refresh API, this is functionally equivalent to enabling the Refresh Grant in OAuth2
{tooltip}application.loginConfiguration.generateRefreshTokens=When enabled the Login API will return refresh tokens, this is functionally equivalent to requesting the offline_scope during an OAuth2 grant
{tooltip}application.loginConfiguration.requireAuthentication=When enabled the Login API will require an API key, when disabled the login API will not require an API key, this is functionally equivalent to requiring client authentication during OAuth

{description}custom-claim-configuration=To modify or augment the claims returned for this application, select a lambda to be invoked during token creation.

# Override the global tooltip for this since the Application has a different config for HMAC secret
{tooltip}jwtConfiguration.secret=Read only. This is the client secret found on the OAuth tab, if you wish to change the secret used for signing and verifying JWTs, you will need to regenerate the client secret. The HMAC secret should be considered sensitive information. It should only be shared with trusted services. Anyone with this secret may sign and verify tokens

{tooltip}tenant=Select the desired tenant for this application

# SAML v2 tooltips
{tooltip}application.samlv2Configuration.keyId=The selected key will be used to sign and verify SAML requests, see Key Master settings to add or manage keys
{tooltip}application.samlv2Configuration.debug=Enable debug to create an event log to assist you in debugging integration errors
{tooltip}application.samlv2Configuration.audience=Some service providers require a different audience (such as Zendesk). You can leave this blank if the audience is the same as the issuer
{tooltip}application.samlv2Configuration.callbackURL=The URL that FusionAuth returns the user to after they have logged in via SAML v2, also known as the Assertion Consumer Service URL (ACS)
{tooltip}application.samlv2Configuration.logoutURL=The URL that the user is redirected to after they are logged out. Usually this is the starting location of the application 
{tooltip}application.samlv2Configuration.issuer=The issuer used by service providers (i.e. Google, Zendesk, etc.) to identify themselves to FusionAuth's SAML identity provider. Often you cannot set this in the service provider and need to read their documentation or test the integration and use the error messages to determine the correct value
{tooltip}application.samlv2Configuration.xmlSignatureC14nMethod=The XML signature canonicalization method. Some service providers require specific methods. For example, Pivotal Tracker requires Inclusive. Check with your service provider or test each one to determine which is required

# Registration delete policy tooltips
{tooltip}application.registrationDeletePolicy.unverified.enabled=Enable to automatically delete un-verified registrations after a configured period
{tooltip}application.registrationDeletePolicy.unverified.numberOfDaysToRetain=The number of days before an un-verified registration is automatically deleted

# Errors
[inactive]=That application is not active and cannot be edited.

[couldNotConvert]applicationId=Invalid UUID
[duplicate]applicationId=That Id already exists
[inactive]applicationId=That Id already exists and is inactive

[tooLong]role.description=255 characters max

[blank]application.name=Required
[duplicate]application.name=Already exists
[inactive]application.name=Already exists and is inactive
[startsWithUnderscore]application.name=Underscores are not allowed in application names

[empty]application.roles=Required

# CleanSpeak errors
[couldNotConvert]application.cleanSpeakConfiguration.usernameModeration.applicationId=Invalid UUID
[missing]application.cleanSpeakConfiguration.usernameModeration.applicationId=Required

# OAuth errors
[couldNotConvert]application.oauthConfiguration.authorizedOriginURLs=Invalid URL
[invalidURL]application.oauthConfiguration.authorizedOriginURLs=URL must begin with http

[couldNotConvert]application.oauthConfiguration.authorizedRedirectURLs=Invalid URL
[invalidURL]application.oauthConfiguration.authorizedRedirectURLs=Invalid URL

[couldNotConvert]application.oauthConfiguration.logoutURL=Invalid URL
[invalidURL]application.oauthConfiguration.logoutURL=URL must begin with http
[invalidURL]application.oauthConfiguration.deviceVerificationURL=URL must begin with http
[blank]application.oauthConfiguration.deviceVerificationURL=Required

# Verification errors
[missing]application.verificationEmailTemplateId=Required

# JWT Configuration Errors
[tooSmall]application.jwtConfiguration.timeToLiveInSeconds=Invalid number
[couldNotConvert]application.jwtConfiguration.timeToLiveInSeconds=Invalid number
[tooSmall]application.jwtConfiguration.refreshTokenTimeToLiveInMinutes=Invalid number
[couldNotConvert]application.jwtConfiguration.refreshTokenTimeToLiveInMinutes=Invalid number

# Registration delete policy errors
[tooSmall]application.registrationDeletePolicy.unverified.numberOfDaysToRetain=Invalid number

# SAML v2 errors
[missing]application.samlv2Configuration.callbackURL=Required
[invalidURL]application.samlv2Configuration.callbackURL=Invalid URL
[blank]application.samlv2Configuration.issuer=Required
[duplicate]application.samlv2Configuration.issuer=Already exists
[missing]application.samlv2Configuration.keyId=Required
[invalid]application.samlv2Configuration.keyId=Invalid

# Lambda errors
[invalid]application.lambdaConfiguration.accessTokenPopulateId=Missing or deleted
[invalid]application.lambdaConfiguration.idTokenPopulateId=Missing or deleted
[invalid]application.lambdaConfiguration.samlv2PopulateId=Missing or deleted
